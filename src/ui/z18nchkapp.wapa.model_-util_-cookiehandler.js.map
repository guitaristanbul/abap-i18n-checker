{"version":3,"sources":["../../../dev/model/util/cookieHandler.js"],"names":["LANGUAGE_COOKIE","CLIENT_COOKIE","setCookie","sName","sValue","document","cookie","getCookie","sCookieName","aAllCookies","split","i","length","sCookie","charAt","substring","i+
ndexOf"],"mappings":";;;AAAA,QAAMA,eAAe,GAAG,iCAAxB;AACA,QAAMC,aAAa,GAAG,+BAAtB;AACA;AACA;AACA;AACA;AACA;;AACA,WAASC,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AAC9BC,IAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEH,KAAM,IAAGC,MAAO,SAArC;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,+
WAASG,SAAT,CAAmBC,WAAnB,EAAgC;AAC5B,UAAML,KAAK,GAAI,GAAEK,WAAY,GAA7B;AAEA,QAAIC,WAAW,GAAGJ,QAAQ,CAACC,MAAT,CAAgBI,KAAhB,CAAsB,GAAtB,CAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,UAAIE,OAAO,GAAGJ,WA+
AW,CAACE,CAAD,CAAzB;;AACA,aAAOE,OAAO,CAACC,MAAR,CAAe,CAAf,KAAqB,GAA5B,EAAiC;AAC7BD,QAAAA,OAAO,GAAGA,OAAO,CAACE,SAAR,CAAkB,CAAlB,CAAV;AACH;;AACD,UAAIF,OAAO,CAACG,OAAR,CAAgBb,KAAhB,KAA0B,CAA9B,EAAiC;AAC7B,eAAOU,OAAO,CAACE,SAAR,CAAkBZ,KAAK,CAACS,MAAxB,EAAgC+
C,OAAO,CAACD,MAAxC,CAAP;AACH;AACJ;;AACD,WAAO,EAAP;AACH;AACD;AACA;AACA;;;kBACe,E","sourcesContent":["const LANGUAGE_COOKIE = \"flp.plugins.logoninfo.languages\";\nconst CLIENT_COOKIE = \"flp.plugins.logoninfo.clients\";\n/**\n * Sets a new cookie\n * @par+
am {string} sName The id of the cookie to set\n * @param {string} sValue the value of the cookie to set\n */\nfunction setCookie(sName, sValue) {\n    document.cookie = `${sName}=${sValue};path=/`;\n}\n\n/**\n * Retrieves the value of the given cookie na+
me\n * @param {string} sCookieName the name of a cookie\n * @returns {string} the value of the cookie if it exists\n */\nfunction getCookie(sCookieName) {\n    const sName = `${sCookieName}=`;\n\n    var aAllCookies = document.cookie.split(\";\");\n    f+
or (var i = 0; i < aAllCookies.length; i++) {\n        var sCookie = aAllCookies[i];\n        while (sCookie.charAt(0) == \" \") {\n            sCookie = sCookie.substring(1);\n        }\n        if (sCookie.indexOf(sName) == 0) {\n            return sCo+
okie.substring(sName.length, sCookie.length);\n        }\n    }\n    return \"\";\n}\n/**\n * Handles all things cookie ;)\n */\nexport default {};\n"],"file":"cookieHandler.js"}                                                                             
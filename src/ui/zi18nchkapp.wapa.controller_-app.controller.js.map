{"version":3,"sources":["../../dev/controller/App.controller.js"],"names":["BaseController","AppController","onInit","prototype","call","oRouter","attachRouteMatched","onRouteMatched","attachBeforeRouteMatched","onBeforeRouteMatched","oEvent","sLayout","+
getParameters","arguments","layout","oNextUIState","getOwnerComponent","getHelper","getNextUIState","oLayoutModel","setProperty","sRouteName","getParameter","oArguments","_updateUIElements","_sCurrentRouteName","_sCurrentPath","resultPath","_sCurrentDeta+
ilEntryPath","detailPath","onStateChanged","bIsNavigationArrow","navTo","oUIState","getCurrentUIState","setData","onExit","detachRouteMatched","detachBeforeRouteMatched"],"mappings":";;;;;;;QAAOA,c;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;QACqBC,a,GAAsBD,c;A+
ACvCE,IAAAA,M,qBAAS;AACLF,MAAAA,cAAc,CAACG,SAAf,CAAyBD,MAAzB,CAAgCE,IAAhC,CAAqC,IAArC;AACA,WAAKC,OAAL,CAAaC,kBAAb,CAAgC,KAAKC,cAArC,EAAqD,IAArD;AACA,WAAKF,OAAL,CAAaG,wBAAb,CAAsC,KAAKC,oBAA3C,EAAiE,IAAjE;AACH,K;AAEDA,IAAAA,oB,iCAAqBC,M,EAAQ;AACzB,UAAIC,OA+
AO,GAAGD,MAAM,CAACE,aAAP,GAAuBC,SAAvB,CAAiCC,MAA/C,CADyB,CAGzB;;AACA,UAAI,CAACH,OAAL,EAAc;AACV,cAAMI,YAAY,GAAG,KAAKC,iBAAL,GAAyBC,SAAzB,GAAqCC,cAArC,CAAoD,CAApD,CAArB;AACAP,QAAAA,OAAO,GAAGI,YAAY,CAACD,MAAvB;AACH,OAPwB,CASzB;;;AACA,UAAIH,OAAJ,EAAa;AACT,aA+
AKQ,YAAL,CAAkBC,WAAlB,CAA8B,SAA9B,EAAyCT,OAAzC;AACH;AACJ,K;AAEDJ,IAAAA,c,2BAAeG,M,EAAQ;AACnB,YAAMW,UAAU,GAAGX,MAAM,CAACY,YAAP,CAAoB,MAApB,CAAnB;AACA,YAAMC,UAAU,GAAGb,MAAM,CAACY,YAAP,CAAoB,WAApB,CAAnB;;AAEA,WAAKE,iBAAL,GAJmB,CAMnB;;;AACA,WAAKC,kBAAL,GAA0B+
J,UAA1B;AACA,WAAKK,aAAL,GAAqBH,UAAU,CAACI,UAAhC;AACA,WAAKC,wBAAL,GAAgCL,UAAU,CAACM,UAA3C;AACH,K;AAEDC,IAAAA,c,2BAAepB,M,EAAQ;AACnB,YAAMqB,kBAAkB,GAAGrB,MAAM,CAACY,YAAP,CAAoB,mBAApB,CAA3B;AACA,YAAMX,OAAO,GAAGD,MAAM,CAACY,YAAP,CAAoB,QAApB,CAAhB;;AAEA,WAAKE+
,iBAAL,GAJmB,CAMnB;;;AACA,UAAIO,kBAAJ,EAAwB;AACpB,aAAK1B,OAAL,CAAa2B,KAAb,CACI,KAAKP,kBADT,EAEI;AAAEX,UAAAA,MAAM,EAAEH,OAAV;AAAmBgB,UAAAA,UAAU,EAAE,KAAKD,aAApC;AAAmDG,UAAAA,UAAU,EAAE,KAAKD;AAApE,SAFJ,EAGI,IAHJ;AAKH;AACJ,K;AAGDJ,IAAAA,iB,+BAAoB;AAChB,YAAM+
S,QAAQ,GAAG,KAAKjB,iBAAL,GAAyBC,SAAzB,GAAqCiB,iBAArC,EAAjB;AACA,WAAKf,YAAL,CAAkBgB,OAAlB,CAA0BF,QAA1B;AACH,K;AAEDG,IAAAA,M,qBAAS;AACL,WAAK/B,OAAL,CAAagC,kBAAb,CAAgC,KAAK9B,cAArC,EAAqD,IAArD;AACA,WAAKF,OAAL,CAAaiC,wBAAb,CAAsC,KAAK7B,oBAA3C,EAAiE,IAAjE;AAC+
H;;SA3DgBR,a","sourcesContent":["import BaseController from \"devepos/i18ncheck/controller/BaseController\";\n/**\n * App controller\n *\n * @extends devepos.i18ncheck.controller.BaseController\n * @alias devepos.i18ncheck.controller.App\n * @public\n */+
\nexport default class AppController extends BaseController {\n    onInit() {\n        BaseController.prototype.onInit.call(this);\n        this.oRouter.attachRouteMatched(this.onRouteMatched, this);\n        this.oRouter.attachBeforeRouteMatched(this.on+
BeforeRouteMatched, this);\n    }\n\n    onBeforeRouteMatched(oEvent) {\n        let sLayout = oEvent.getParameters().arguments.layout;\n\n        // If there is no layout parameter, query for the default level 0 layout (normally OneColumn)\n        if (+
!sLayout) {\n            const oNextUIState = this.getOwnerComponent().getHelper().getNextUIState(0);\n            sLayout = oNextUIState.layout;\n        }\n\n        // Update the layout of the FlexibleColumnLayout\n        if (sLayout) {\n            +
this.oLayoutModel.setProperty(\"/layout\", sLayout);\n        }\n    }\n\n    onRouteMatched(oEvent) {\n        const sRouteName = oEvent.getParameter(\"name\");\n        const oArguments = oEvent.getParameter(\"arguments\");\n\n        this._updateUIEle+
ments();\n\n        // Save the current route name\n        this._sCurrentRouteName = sRouteName;\n        this._sCurrentPath = oArguments.resultPath;\n        this._sCurrentDetailEntryPath = oArguments.detailPath;\n    }\n\n    onStateChanged(oEvent) {\+
n        const bIsNavigationArrow = oEvent.getParameter(\"isNavigationArrow\");\n        const sLayout = oEvent.getParameter(\"layout\");\n\n        this._updateUIElements();\n\n        // Replace the URL with the new layout if a navigation arrow was use+
d\n        if (bIsNavigationArrow) {\n            this.oRouter.navTo(\n                this._sCurrentRouteName,\n                { layout: sLayout, resultPath: this._sCurrentPath, detailPath: this._sCurrentDetailEntryPath },\n                true\n      +
      );\n        }\n    }\n\n    // Update the close/fullscreen buttons visibility\n    _updateUIElements() {\n        const oUIState = this.getOwnerComponent().getHelper().getCurrentUIState();\n        this.oLayoutModel.setData(oUIState);\n    }\n\n   +
 onExit() {\n        this.oRouter.detachRouteMatched(this.onRouteMatched, this);\n        this.oRouter.detachBeforeRouteMatched(this.onBeforeRouteMatched, this);\n    }\n}\n"],"file":"App.controller.js"}                                                    
{"version":3,"sources":["../../dev/controller/App.controller.js"],"names":["BaseController","AppController","onInit","oRouter","getOwnerComponent","getRouter","attachRouteMatched","onRouteMatched","attachBeforeRouteMatched","onBeforeRouteMatched","oEvent+
","oModel","getLayoutModel","sLayout","getParameters","arguments","layout","oNextUIState","getHelper","getNextUIState","setProperty","sRouteName","getParameter","oArguments","_updateUIElements","_sCurrentRouteName","_sCurrentPath","resultPath","_sCurrent+
DetailEntryPath","detailPath","onStateChanged","bIsNavigationArrow","navTo","oUIState","getCurrentUIState","setData","onExit","detachRouteMatched","detachBeforeRouteMatched"],"mappings":";;;;;;;QAAOA,c;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;QACqBC,a,GAAsBD+
,c;AACvCE,IAAAA,M,qBAAS;AACL,WAAKC,OAAL,GAAe,KAAKC,iBAAL,GAAyBC,SAAzB,EAAf;AACA,WAAKF,OAAL,CAAaG,kBAAb,CAAgC,KAAKC,cAArC,EAAqD,IAArD;AACA,WAAKJ,OAAL,CAAaK,wBAAb,CAAsC,KAAKC,oBAA3C,EAAiE,IAAjE;AACH,K;AAEDA,IAAAA,oB,iCAAqBC,M,EAAQ;AACzB,YAAMC,MAAM,GAAG,KAA+
KP,iBAAL,GAAyBQ,cAAzB,EAAf;AACA,UAAIC,OAAO,GAAGH,MAAM,CAACI,aAAP,GAAuBC,SAAvB,CAAiCC,MAA/C,CAFyB,CAIzB;;AACA,UAAI,CAACH,OAAL,EAAc;AACV,cAAMI,YAAY,GAAG,KAAKb,iBAAL,GAAyBc,SAAzB,GAAqCC,cAArC,CAAoD,CAApD,CAArB;AACAN,QAAAA,OAAO,GAAGI,YAAY,CAACD,MAAvB;AACH,OA+
RwB,CAUzB;;;AACA,UAAIH,OAAJ,EAAa;AACTF,QAAAA,MAAM,CAACS,WAAP,CAAmB,SAAnB,EAA8BP,OAA9B;AACH;AACJ,K;AAEDN,IAAAA,c,2BAAeG,M,EAAQ;AACnB,YAAMW,UAAU,GAAGX,MAAM,CAACY,YAAP,CAAoB,MAApB,CAAnB;AACA,YAAMC,UAAU,GAAGb,MAAM,CAACY,YAAP,CAAoB,WAApB,CAAnB;;AAEA,WAAKE,iBA+
AL,GAJmB,CAMnB;;;AACA,WAAKC,kBAAL,GAA0BJ,UAA1B;AACA,WAAKK,aAAL,GAAqBH,UAAU,CAACI,UAAhC;AACA,WAAKC,wBAAL,GAAgCL,UAAU,CAACM,UAA3C;AACH,K;AAEDC,IAAAA,c,2BAAepB,M,EAAQ;AACnB,YAAMqB,kBAAkB,GAAGrB,MAAM,CAACY,YAAP,CAAoB,mBAApB,CAA3B;AACA,YAAMT,OAAO,GAAGH,MAAM,C+
AACY,YAAP,CAAoB,QAApB,CAAhB;;AAEA,WAAKE,iBAAL,GAJmB,CAMnB;;;AACA,UAAIO,kBAAJ,EAAwB;AACpB,aAAK5B,OAAL,CAAa6B,KAAb,CACI,KAAKP,kBADT,EAEI;AAAET,UAAAA,MAAM,EAAEH,OAAV;AAAmBc,UAAAA,UAAU,EAAE,KAAKD,aAApC;AAAmDG,UAAAA,UAAU,EAAE,KAAKD;AAApE,SAFJ,EAGI,IAHJ;AAKH;A+
ACJ,K;AAGDJ,IAAAA,iB,+BAAoB;AAChB,YAAMb,MAAM,GAAG,KAAKP,iBAAL,GAAyBQ,cAAzB,EAAf;AACA,YAAMqB,QAAQ,GAAG,KAAK7B,iBAAL,GAAyBc,SAAzB,GAAqCgB,iBAArC,EAAjB;AACAvB,MAAAA,MAAM,CAACwB,OAAP,CAAeF,QAAf;AACH,K;AAEDG,IAAAA,M,qBAAS;AACL,WAAKjC,OAAL,CAAakC,kBAAb,CAAgC,K+
AAK9B,cAArC,EAAqD,IAArD;AACA,WAAKJ,OAAL,CAAamC,wBAAb,CAAsC,KAAK7B,oBAA3C,EAAiE,IAAjE;AACH;;SA7DgBR,a","sourcesContent":["import BaseController from \"devepos/i18ncheck/controller/BaseController\";\n/**\n * App controller\n *\n * @extends devepos.i18nchec+
k.controller.BaseController\n * @alias devepos.i18ncheck.controller.App\n * @public\n */\nexport default class AppController extends BaseController {\n    onInit() {\n        this.oRouter = this.getOwnerComponent().getRouter();\n        this.oRouter.atta+
chRouteMatched(this.onRouteMatched, this);\n        this.oRouter.attachBeforeRouteMatched(this.onBeforeRouteMatched, this);\n    }\n\n    onBeforeRouteMatched(oEvent) {\n        const oModel = this.getOwnerComponent().getLayoutModel();\n        let sLayo+
ut = oEvent.getParameters().arguments.layout;\n\n        // If there is no layout parameter, query for the default level 0 layout (normally OneColumn)\n        if (!sLayout) {\n            const oNextUIState = this.getOwnerComponent().getHelper().getNext+
UIState(0);\n            sLayout = oNextUIState.layout;\n        }\n\n        // Update the layout of the FlexibleColumnLayout\n        if (sLayout) {\n            oModel.setProperty(\"/layout\", sLayout);\n        }\n    }\n\n    onRouteMatched(oEvent) +
{\n        const sRouteName = oEvent.getParameter(\"name\");\n        const oArguments = oEvent.getParameter(\"arguments\");\n\n        this._updateUIElements();\n\n        // Save the current route name\n        this._sCurrentRouteName = sRouteName;\n  +
      this._sCurrentPath = oArguments.resultPath;\n        this._sCurrentDetailEntryPath = oArguments.detailPath;\n    }\n\n    onStateChanged(oEvent) {\n        const bIsNavigationArrow = oEvent.getParameter(\"isNavigationArrow\");\n        const sLayou+
t = oEvent.getParameter(\"layout\");\n\n        this._updateUIElements();\n\n        // Replace the URL with the new layout if a navigation arrow was used\n        if (bIsNavigationArrow) {\n            this.oRouter.navTo(\n                this._sCurrent+
RouteName,\n                { layout: sLayout, resultPath: this._sCurrentPath, detailPath: this._sCurrentDetailEntryPath },\n                true\n            );\n        }\n    }\n\n    // Update the close/fullscreen buttons visibility\n    _updateUIEle+
ments() {\n        const oModel = this.getOwnerComponent().getLayoutModel();\n        const oUIState = this.getOwnerComponent().getHelper().getCurrentUIState();\n        oModel.setData(oUIState);\n    }\n\n    onExit() {\n        this.oRouter.detachRoute+
Matched(this.onRouteMatched, this);\n        this.oRouter.detachBeforeRouteMatched(this.onBeforeRouteMatched, this);\n    }\n}\n"],"file":"App.controller.js"}                                                                                                 